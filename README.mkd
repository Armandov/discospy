# python3-discogs-client

This is an active fork of the official "Discogs API client for Python", which
was deprecated by discogs.com as of June 2020. We think it is a very useful
Python module and decided to continue maintaining it. If you'd like to
contribute your code, you are very welcome to submit a pull-request as described
[here](#contributing).

[python3-discogs-client](https://pypi.org/project/python3-discogs-client/)
enables you to query the Discogs database (discogs.com) through its REST-API for
information on artists, releases, labels, users, Marketplace listings, and more.
It also supports OAuth 1.0a authorization, which allows you to change user data
such as profile information, collections and wantlists, inventory, and orders.

Find usage information on this README page or search and ask in the API section
of the Discogs developer forum at https://www.discogs.com/forum/topic/1082.

[![Coverage Status](
https://coveralls.io/repos/github/joalla/discogs_client/badge.svg)](
https://coveralls.io/github/joalla/discogs_client)

## Installation

Install [the client from PyPI](https://pypi.org/project/python3-discogs-client/)
using your favorite package manager.

```sh
$ pip install python3-discogs-client
```

## Quickstart

### Instantiating the client object

```python
>>> import discogs_client
>>> d = discogs_client.Client('ExampleApplication/0.1')
```

_For more information, have a look at the
[quickstart section](
https://python3-discogs-client.readthedocs.org/en/latest/quickstart.html)
of our documentation pages._

### Authorization (optional)

There are two different authorization methods you can choose from depending on
your requirements:
[User-token](
https://python3-discogs-client.readthedocs.org/en/latest/authentication.html#user-token-authorization)
and [OAuth](
https://python3-discogs-client.readthedocs.org/en/latest/authentication.html#oauth-authorization)
authentication.


#### User-token authentication

This is the quickest way to authenticate and become able to perform requests
requiring authentication, such as search (see below). The downside is that
you'll be limited to the information only your user account can see (i.e., no
requests on behalf of other users).

For this, you'll need to
[generate a user-token from your developer settings](
https://python3-discogs-client.readthedocs.org/en/latest/authentication.html#user-token-authentication)
on the Discogs website.

```python
>>> d = discogs_client.Client('ExampleApplication/0.1', user_token="my_user_token")
```

_**Head to the [authentication section
section](https://python3-discogs-client.readthedocs.org/en/latest/authentication.html#oauth-authentication)
of our docs to learn about the OAuth authentication method.**_

### Fetching data

Use methods on the client to fetch objects. You can search for objects:

```python
>>> results = d.search('Stockholm By Night', type='release')
>>> results.pages
1
>>> artist = results[0].artists[0]
>>> artist.name
u'Persuader, The'
```

Or fetch them by ID:

```python
>>> artist.id
1
>>> artist == d.artist(1)
True
```

You can drill down as far as you like.

```python
>>> releases = d.search('Bit Shifter', type='artist')[0].releases[1].\
...     versions[0].labels[0].releases
>>> len(releases)
134
```

_**Have a look at the [fetching data
section](https://python3-discogs-client.readthedocs.org/en/latest/fetching_data.html)
of our documentation pages.**_


## Marketplace listing

As an authenticated user you can add, edit and delete your own marketplace listings.

```python
from discogs_client import Condition, Status, Sort
# Add new listing
me.inventory.add_listing(
    release=15246519,                       # Also accepts Release object
    condition=Condition.MINT,               # condition set to 'Mint (M)'
    price=29.99,
    status=Status.DRAFT,                    # status set to 'Draft'
    sleeve_condition=Condition.NEAR_MINT    # sleeve condition set to 'Near Mint (NM or M-)'
)
```

_**To learn how to update your inventory and delete listings, have a look at the
[marketplace listing section](
https://python3-discogs-client.readthedocs.org/en/latest/listing.html) of our
docs.**_


## Contributing

1. Fork this repo
2. Create a feature branch
3. Open a pull-request


## For more information

- Read through [python3-discogs-client.readthedocs.org](https://pyhon3-discogs-client.readthedocs.org) for step by step instructions.
- Check the [discogs_client Python package documentation](python3-discogs-client.readthedocs.org/en/latest/discogs_client.html) to find out details on specific modules, classes, methods, ...
- Or just spin up a REPL and use `dir()` on things :)
